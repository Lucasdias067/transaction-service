generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(USER)
  isActive  Boolean  @default(true) @map("is_active")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  categories   Category[]
  transactions Transaction[]

  @@index([email])
  @@index([isActive])
  @@map("users")
}

model Transaction {
  id     String            @id @default(uuid())
  title  String
  amount Decimal
  type   TransactionType
  status TransactionStatus

  installmentNumber  Int?    @map("installment_number")
  totalInstallments  Int?    @map("total_installments")
  installmentGroupId String? @map("installment_group_id")

  dueDate      DateTime? @map("due_date")
  paidAt       DateTime? @map("paid_at")
  EffectiveDate DateTime @map("effective_date")
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime  @updatedAt @map("updated_at")

  userId     String @map("user_id")
  categoryId String @map("category_id")

  category Category @relation(fields: [categoryId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@unique([installmentGroupId, installmentNumber], name: "unique_installment")
  @@index([userId, type])
  @@index([categoryId])
  @@index([status])
  @@index([dueDate])
  @@index([installmentGroupId])
  @@index([createdAt])
  @@map("transaction")
}

model Category {
  id   String          @id @default(uuid())
  name String
  type TransactionType

  userId String? @map("user_id")

  user         User?         @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  transactions Transaction[]

  @@unique([name, userId, type], name: "unique_category_per_user")
  @@index([userId, type])
  @@map("category")
}

enum Role {
  USER
  ADMIN
}

enum TransactionType {
  INCOME  @map("income")
  EXPENSE @map("expense")
}

enum TransactionStatus {
  PENDING  @map("pending")
  PAID     @map("paid")
  RECEIVED @map("received")
  OVERDUE  @map("overdue")
  CANCELED @map("canceled")
}

enum RecurrenceType {
  DAILY   @map("daily")
  WEEKLY  @map("weekly")
  MONTHLY @map("monthly")
  YEARLY  @map("yearly")
}
